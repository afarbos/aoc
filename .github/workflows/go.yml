name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: make build -j


    - name: Test
      run: make test

    - name: Codecov unit tests
      uses: codecov/codecov-action@v1.0.7
      with:
         file: ./coverage-unit.txt
         flags: unit
         fail_ci_if_error: true

    - name: Codecov functional test
      uses: codecov/codecov-action@v1.0.7
      with:
         file: ./coverage-functional.txt
         flags: functional
         fail_ci_if_error: true

    - name: Run
      run: make run

  lint:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
          fetch-depth: 1

    - name: GolangCI-Lint
      uses: reviewdog/action-golangci-lint@v1
      with:
          github_token: ${{ secrets.GITHUBTOKEN }}
          golangci_lint_flags: "-v --config=.golangci.yml"

    - name: Go Report Card Refresh
      uses: afarbos/go-report-card-action@v1.0
      with:
        threshold: '100'
